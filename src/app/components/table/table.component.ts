import { Component } from '@angular/core';
import { MatTableDataSource, MatTableModule } from '@angular/material/table';
import { CommonModule } from '@angular/common';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatDialog } from "@angular/material/dialog";
import { FormDialogComponent } from '../form-dialog/form-dialog.component';

@Component({
  selector: 'app-table',
  standalone: true,
  imports: [MatTableModule, CommonModule, MatIconModule, MatButtonModule, FormDialogComponent],
  templateUrl: './table.component.html',
  styleUrl: './table.component.scss'
})
export class TableComponent {

  columns: string[] = [
    'CVE-ID',
    'Severity',
    'CVSS',
    'Affected Packages',
    'CWE-ID',
  ];
  displayedColumns: string[] = [
    ...this.columns,
    'Actions',
  ];
  constructor(public dialog: MatDialog) { }

  openDialog(index?: number): void {
    const dialogRef = this.dialog.open(FormDialogComponent, {
      height: '450px',
      maxWidth: '600px',
      minWidth: "300px",
      data: index == null ? null : {
        index: index, cveId: this.CVEData[index]['CVE-ID'],
        severity: this.CVEData[index].Severity,
        cvss: this.CVEData[index].CVSS,
        affectedPackages: this.CVEData[index]['Affected Packages'],
        cweId: this.CVEData[index]['CWE-ID'],
      },
    });

    dialogRef.afterClosed().subscribe(result => {
      console.log(result);
      if (result != null) {
        if (result.index != -1) {
          this.CVEData[result.index] = {
            'CVE-ID': result.cveId,
            'Severity': result.severity,
            'CVSS': result.cvss,
            'Affected Packages': result.affectedPackages,
            'CWE-ID': result.cweId,
          };
        }
        else {
          this.CVEData.push({
            'CVE-ID': result.cveId,
            'Severity': result.severity,
            'CVSS': result.cvss,
            'Affected Packages': result.affectedPackages,
            'CWE-ID': result.cweId,
          },);
        }

        this.dataSource = new MatTableDataSource(this.CVEData);
      }
    });
  }

  CVEData = [
    {
      'CVE-ID': "CVE-2021-32628",
      'Severity': 'HIGH',
      'CVSS': 7.5,
      'Affected Packages': "redis-server, redis-tools",
      'CWE-ID': "CWE-190",
    },
    {
      'CVE-ID': "CVE-2016-1585",
      'Severity': 'CRITICAL',
      'CVSS': 9.8,
      'Affected Packages': "apparmor, libapparmor1",
      'CWE-ID': "CWE-254",
    },
    {
      'CVE-ID': "CVE-2021-20308",
      'Severity': 'CRITICAL',
      'CVSS': 9.8,
      'Affected Packages': "htmldoc, htmldoc-common",
      'CWE-ID': "CWE-190",
    },
    {
      'CVE-ID': "CVE-2021-4048",
      'Severity': 'CRITICAL',
      'CVSS': 9.1,
      'Affected Packages': "libblas3",
      'CWE-ID': "CWE-125",
    },
    {
      'CVE-ID': "CVE-2022-36227",
      'Severity': 'CRITICAL',
      'CVSS': 9.8,
      'Affected Packages': "libarchive13",
      'CWE-ID': "CWE-476",
    },
    {
      'CVE-ID': "CVE-2021-3697",
      'Severity': 'HIGH',
      'CVSS': 7,
      'Affected Packages': "grub-common, grub-pc, grub-pc-bin, grub2-common",
      'CWE-ID': "CWE-787",
    },
    {
      'CVE-ID': "CVE-2021-38091",
      'Severity': 'HIGH',
      'CVSS': 8.8,
      'Affected Packages': "libavcodec58, libavutil56, libswresample3",
      'CWE-ID': "CWE-190",
    },
    {
      'CVE-ID': "CVE-2016-2781",
      'Severity': 'MEDIUM',
      'CVSS': 6.5,
      'Affected Packages': "coreutils",
      'CWE-ID': "CWE-20",
    },
    {
      'CVE-ID': "CVE-2016-9802",
      'Severity': 'MEDIUM',
      'CVSS': 5.3,
      'Affected Packages': "bluez, libbluetooth3",
      'CWE-ID': "CWE-119",
    },
    {
      'CVE-ID': "CVE-2019-1563",
      'Severity': 'LOW',
      'CVSS': 3.7,
      'Affected Packages': "libnode72",
      'CWE-ID': "CWE-327",
    },
  ];
  deleteCveRecord(i: number) {
    this.CVEData.splice(i, 1);
    this.dataSource = new MatTableDataSource(this.CVEData);
  }
  dataSource = new MatTableDataSource(this.CVEData);
}
